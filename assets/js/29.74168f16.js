(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{238:function(v,_,n){"use strict";n.r(_);var l=n(0),r=Object(l.a)({},(function(){var v=this,_=v.$createElement,n=v._self._c||_;return n("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[n("h1",{attrs:{id:"特色功能"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#特色功能"}},[v._v("#")]),v._v(" 特色功能")]),v._v(" "),n("p",[v._v("IDEA所提倡的是智能编码，是减少程序员的工作，IDEA的特色功能有以下22点")]),v._v(" "),n("ul",[n("li",[v._v("智能的选取"),n("br"),v._v("\n在很多时候我们要选取某个方法，或某个循环或想一步一步从一个变量到整个类\n慢慢扩充着选取，IDEA就提供这种基于语法的选择，在默认设置中Ctrl+W，\n可以实现选取范围的不断扩充，这种方式在重构的时候尤其显得方便。")]),v._v(" "),n("li",[v._v("丰富的导航模式"),n("br"),v._v("\nIDEA提供了丰富的导航查看模式，例如Ctrl+E显示最近打开过的文件，\nCtrl+N显示你希望显示的类名查找框（该框同样有智能补充功能，\n当你输入字母后IDEA将显示所有候选类名）。在最基本的project视图中，\n你还可以选择多种的视图方式。")]),v._v(" "),n("li",[v._v("历史记录功能"),n("br"),v._v("\n不用通过版本管理服务器，单纯的IDEA就可以查看任何工程中文件的历史记录，\n在版本恢复时你可以很容易的将其恢复。")]),v._v(" "),n("li",[v._v("JUnit的完美支持"),n("br")]),v._v(" "),n("li",[v._v("对重构的优越支持"),n("br"),v._v("\nIDEA是所有IDE中最早支持重构的，其优秀的重构能力一直是其主要卖点之一。")]),v._v(" "),n("li",[v._v("编码辅助"),n("br"),v._v("\nJava规范中提倡的toString()、hashCode()、equals()以及所有的get/set方法，\n你可以不用进行任何的输入就可以实现代码的自动生成，\n从而把你从无聊的基本方法编码中解放出来。")]),v._v(" "),n("li",[v._v("灵活的排版功能"),n("br"),v._v("\n基本所有的IDE都有重排版功能，但仅有IDEA的是人性的，\n因为它支持排版模式的定制，你可以根据不同的项目要求采用不同的排版方式。")]),v._v(" "),n("li",[v._v("XML的完美支持"),n("br"),v._v("\nxml全提示支持：所有流行框架的xml文件都支持全提示，谁用谁知道。")]),v._v(" "),n("li",[v._v("动态语法检测"),n("br"),v._v("\n任何不符合java规范、自己预定义的规范、累赘都将在页面中加亮显示。")]),v._v(" "),n("li",[v._v("代码检查"),n("br"),v._v("\n对代码进行自动分析，检测不符合规范的，存在风险的代码，并加亮显示。")]),v._v(" "),n("li",[v._v("对JSP的完全支持"),n("br"),v._v("\n不需要任何的插件，完全支持JSP。")]),v._v(" "),n("li",[v._v("智能编辑"),n("br"),v._v("\n代码输入过程中，自动补充方法或类。")]),v._v(" "),n("li",[v._v("EJB支持"),n("br"),v._v("\n不需要任何插件完全支持EJB(6.0 支持EJB3.0)")]),v._v(" "),n("li",[v._v("列编辑模式"),n("br"),v._v("\n用过UtralEdit的肯定对其的列编辑模式赞赏不已，因为它减少了很多无聊的重复工作，\n而IDEA完全支持该模式，从而更加提高了编码效率。")]),v._v(" "),n("li",[v._v("预置模板"),n("br"),v._v("\n预置模板可以让你把经常用到的方法编辑进模板，使用时你只用输入简单的几个字母\n就可以完成全部代码的编写。例如使用比较高的public static void main\n(String[] args){}你可以在模板中预设pm为该方法，\n输入时你只要输入pm再按代码辅助键，IDEA将完成代码的自动输入。")]),v._v(" "),n("li",[v._v("完美的自动代码完成"),n("br"),v._v("\n智能检查类中的方法，当发现方法名只有一个时自动完成代码输入，\n从而减少剩下代码的编写工作。")]),v._v(" "),n("li",[v._v("版本控制完美支持"),n("br"),v._v("\n集成了市面上常见的所有版本控制工具插件，包括git、svn、github，\n让开发人员在编程的工程中直接在intellij idea里就能完成代码的提交、检出、\n解决冲突、查看版本控制服务器内容等等。")]),v._v(" "),n("li",[v._v("不使用代码的检查"),n("br"),v._v("\n自动检查代码中不使用的代码，并给出提示，从而使代码更高效。")]),v._v(" "),n("li",[v._v("智能代码"),n("br"),v._v('\n自动检查代码，发现与预置规范有出入的代码给出提示，\n若程序员同意修改自动完成修改。例如代码：String str = "Hello Intellij " +\n"IDEA"; IDEA将给出优化提示，若程序员同意修改IDEA将自动将代码修改为：\nString str = "Hello Intellij IDEA";')]),v._v(" "),n("li",[v._v("正则表达式的查找和替换功能"),n("br"),v._v("\n查找和替换支持正则表达式，从而提高效率。")]),v._v(" "),n("li",[v._v("JavaDoc预览支持"),n("br"),v._v("\n支持JavaDoc的预览功能，在JavaDoc代码中Ctrl+Q显示JavaDoc的结果，\n从而提高doc文档的质量。")]),v._v(" "),n("li",[v._v("程序员意图支持"),n("br"),v._v("\n程序员编码时IDEA时时检测你的意图，或提供建议，或直接帮你完成代码。")])])])}),[],!1,null,null,null);_.default=r.exports}}]);